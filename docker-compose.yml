version: "3.9"

x-common: &common
  image: freqtradeorg/freqtrade:stable
  volumes:
    - ./user_data:/freqtrade/user_data
    - ./.env:/freqtrade/.env:ro
  env_file: .env
  restart: unless-stopped
  depends_on:
    - redis

services:
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  stratA:
    <<: *common
    container_name: ft-stratA
    command: >
      trade
      --config user_data/configs/stratA.json
      --strategy SampleStrategyA

  stratB:
    <<: *common
    container_name: ft-stratB
    command: >
      trade
      --config user_data/configs/stratB.json
      --strategy SampleStrategyB

  waveHyperNW:
    <<: *common
    container_name: ft-waveHyperNW
    command: >
      trade
      --config user_data/configs/waveHyperNW.json
      --strategy WaveHyperNWStrategy

  mlStrategy:
    build:
      context: ./scripts
      dockerfile: Dockerfile.ml
    container_name: ft-mlStrategy
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/mlStrategySimple.json
      --strategy MLStrategySimple

  multiTimeframe:
    <<: *common
    container_name: ft-multiTimeframe
    command: >
      trade
      --config user_data/configs/multiTimeframe.json
      --strategy MultiTimeframeStrategy

  waveEnhanced:
    <<: *common
    container_name: ft-waveEnhanced
    command: >
      trade
      --config user_data/configs/waveHyperNWEnhanced.json
      --strategy WaveHyperNWEnhanced

  telegram_bot:
    build:
      context: ./scripts
      dockerfile: Dockerfile
    container_name: ft-telegram
    env_file: .env
    ports:
      - "8080:8080"
    volumes:
      - ./user_data:/app/user_data:ro
    depends_on:
      - stratA
      - stratB
    restart: unless-stopped

  health_monitor:
    build:
      context: ./scripts
      dockerfile: Dockerfile.monitor
    container_name: ft-health-monitor
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - telegram_bot
    restart: unless-stopped

  risk_manager:
    build:
      context: ./scripts
      dockerfile: Dockerfile.risk
    container_name: ft-risk-manager
    env_file: .env
    volumes:
      - ./user_data:/app/user_data
      - ./backups:/app/backups
    depends_on:
      - telegram_bot
    restart: unless-stopped

  telegram_commander:
    build:
      context: ./scripts
      dockerfile: Dockerfile.commander
    container_name: ft-telegram-commander
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./user_data:/app/user_data
      - .:/app/project
    depends_on:
      - telegram_bot
      - stratA
      - stratB
      - waveHyperNW
      - mlStrategy
      - multiTimeframe
      - waveEnhanced
    restart: unless-stopped

volumes:
  redis_data:
