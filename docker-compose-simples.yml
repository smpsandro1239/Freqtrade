services:
  redis:
    image: redis:7-alpine
    container_name: ft-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

  stratA:
    image: freqtradeorg/freqtrade:stable
    container_name: ft-stratA
    ports:
      - "8081:8081"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/stratA.json
      --strategy SampleStrategyA

  stratB:
    image: freqtradeorg/freqtrade:stable
    container_name: ft-stratB
    ports:
      - "8082:8082"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/stratB.json
      --strategy SampleStrategyB

  waveHyperNW:
    image: freqtradeorg/freqtrade:stable
    container_name: ft-waveHyperNW
    ports:
      - "8083:8083"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/waveHyperNW.json
      --strategy WaveHyperNWStrategy

  mlStrategy:
    image: freqtradeorg/freqtrade:stable
    container_name: ft-mlStrategy
    ports:
      - "8084:8084"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/mlStrategy.json
      --strategy MLStrategy

  mlStrategySimple:
    image: freqtradeorg/freqtrade:stable
    container_name: ft-mlStrategySimple
    ports:
      - "8085:8085"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/mlStrategySimple.json
      --strategy MLStrategySimple

  multiTimeframe:
    image: freqtradeorg/freqtrade:stable
    container_name: ft-multiTimeframe
    ports:
      - "8086:8086"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/multiTimeframe.json
      --strategy MultiTimeframeStrategy

  waveHyperNWEnhanced:
    image: freqtradeorg/freqtrade:stable
    container_name: ft-waveHyperNWEnhanced
    ports:
      - "8087:8087"
    volumes:
      - ./user_data:/freqtrade/user_data
      - ./.env:/freqtrade/.env:ro
    env_file: .env
    restart: unless-stopped
    depends_on:
      - redis
    command: >
      trade
      --config user_data/configs/waveHyperNWEnhanced.json
      --strategy WaveHyperNWEnhanced

  telegram_commander:
    build:
      context: ./scripts
      dockerfile: Dockerfile.commander
    container_name: ft-telegram-commander
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./user_data:/app/user_data
      - .:/app/project
    depends_on:
      - stratA
      - stratB
      - waveHyperNW
      - mlStrategy
      - mlStrategySimple
      - multiTimeframe
      - waveHyperNWEnhanced
    restart: unless-stopped

volumes:
  redis_data: